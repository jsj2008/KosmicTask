/*

Created by {{ author }} on {% now | date_format: "dd MMM yyyy HH:mm:ss" %}

Script: {{ script }}

Credits:

Notes:

*/
import java.io.*;
class kosmicTask
{ 
	public static  void main(String args[]) throws Exception
    {
  		// define result
    	String result = "";

   		try {
 
    		// define filenames
			String filenames = "";
			
			// define command
    		String command = "screencapture";
    		
    		for (int i = 1; i <= 5; i++) {
    			
    			if (i > 1) filenames += ", ";
    			
    			// build filename
    			String filename = "capture-" + i + ".png";
    			
    			// log command
				System.err.println("Running " + command + " command...");
			
	     		// execute command
	       		String cmd = command + " -t png " + filename;
	    		Process process = Runtime.getRuntime().exec(cmd);
	    		
	    		// wait for process to end
	    		process.waitFor();
	    		
	    		// check for errors
	    		if (process.exitValue() != 0) {
	    			throw new Exception("Error running " + command);
	    		}
    			
    			// log wait
				System.err.println("Waiting...");

    			// sleep 1 second
    			Thread.sleep(1000);
    			
    			filenames += filename ;
    		}
    		
    		// format a YAML inline format dictionary reult with filename
    		result = String.format("--- {kosmicFile: [%s] , kosmicInfo: files returned}", filenames);

		} catch (Exception e) {
			
			// format an error result
			result = String.format("--- {kosmicError: '%s' }", e.getMessage());
		}
		
		// print result
		System.out.println(result);

	}
}