{{ task-header }}
#include <stdio.h>
#include <unistd.h>

int main() 
{
	
{{ task-input-variables }}

	// filenames buffer
	char files[1000];
	
	// define command
	char *command = "screencapture";
	
	for (int i = 1; i <= 5; i++) {
		
		if (i > 1) {
			strcat(files, ", ");
		}
		
		// capture screen image to file
		// files created in the current directory will be deleted when the task ends
		char file[100];
		sprintf(file, "capture-%i.png", i);
	
		// log command
		fprintf(stderr, "Running %s command...\n", command);
		
		// build command
		char cmdbuf[100];
		sprintf(cmdbuf, "%s -t png %s", command, file);
	
		// execute command
		int status = system(cmdbuf);
		
		// check for errors
		if (status != 0) {
			
			// return error
			printf("--- {kosmicError: 'Error running %s'}", command);
			return 1;	
		}
	
		strcat(files, file);
		
		// log wait
		fprintf(stderr, "Waiting...\n");
	
		sleep(1);
	
	}
	
	// return a YAML inline format dictionary with array of filenames
	printf("--- {kosmicName: %s, kosmicFile: [%s] , kosmicInfo: files returned}", command, files);
	
    return 0;
}