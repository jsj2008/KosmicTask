{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf290
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;\red0\green0\blue255;\red0\green116\blue0;
\red14\green14\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\b\fs36 \cf2 Mugginsoft\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\b0\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\b\fs28 \cf0 Usage\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\b0 \cf0 JavaScript is typically used as a client side script within web browsers. It may also be used for general purpose scripting duties.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\b \cf0 Limitations
\b0 \
\
JavaScript prohibits general purpose access to the operating system and so cannot, for example, create new file content.\
\
A KosmicTask JavaScript powered task may however return existing file content if the required path is known.\
\
\

\b Calling the Task Run Function
\b0 \
\
KosmicTask JavaScript powered tasks are initiated by calling the 
\b\fs24 Run Function
\b0\fs28  defined in the task Settings. In the following example the task 
\b\fs24 Run Function
\b0\fs28  is set to 
\f1\fs22 \cf3 kosmicTask
\f0\fs28 \cf0 .\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f1\fs22 \cf3 function kosmicTask() \
\{\
	// return our string result\
	return 'Hello, kosmos!';\
\}
\f0\fs28 \cf0 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\b \cf0 Result Objects
\b0 \
\
JavaScript tasks may generally return numbers and strings directly from the task run function. Some other objects may also be rendered in an intelligible format when returned directly.\
\
To return structured data reliably, including the contents of files, JavaScript powered tasks should format result data using YAML. KosmicTask supports both the YAML inline and block formats.\
\
JavaScript tasks may either return YAML strings directly or make use of the provided 
\f1\fs22 \cf3 KosmicTaskController
\f0\fs28 \cf0  class. This class (which is automatically added to the JavaScript global context) provides a convenience method that converts native JavaScript objects such as 
\f1\fs22 \cf3 Array
\f0\fs28 \cf0  and 
\f1\fs22 \cf3 Object
\f0\fs28 \cf0  into the required YAML format string.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f1\fs22 \cf3 function kosmicTask() \
\{\
\
	// define properties on an object\
	var planets = new Object();\
	planets["us"] = "earth";\
	planets["them"] = "mars";\
	planets.no_one = "moon";	\
\
	// return native object as YAML\
	return KosmicTaskController.objectAsString(planets);\
\}
\f0\fs28 \cf0 \
\
\pard\pardeftab720\sa320\ql\qnatural
\cf0 YAML can be viewed as a natural superset of JSON (JavaScript Object Notation). Hence calling the 
\f1\fs22 \cf3 KosmicTaskController
\f0\fs28 \cf0  class 
\f1\fs22 \cf3 objectAsString
\f0\fs28 \cf0  function is functionally equivalent to calling 
\f1\fs22 \cf3 JSON.stringify\cf0 \CocoaLigature0 .\
\pard\pardeftab720\sa320\ql\qnatural

\f0\fs28 \cf0 JavaScript does not support a dictionary object directly but an associative storage model can be achieved by using dynamic object properties. In the above example a generic object is created and new properties are defined using the two available syntaxes for property assignment. When a JavaScript object is converted to YAML the object's properties are represented as entries in an associative array.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 \CocoaLigature1 For a discussion on JavaScript associative arrays see : {\field{\*\fldinst{HYPERLINK "http://blog.xkoder.com/2008/07/10/javascript-associative-arrays-demystified/"}}{\fldrslt http://blog.xkoder.com/2008/07/10/javascript-associative-arrays-demystified/}}\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\b \cf0 Result File Handling\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\b0 \cf0 \
KosmicTask supports the returning of file contents within task results. \
\
KosmicTask automatically looks for a 
\f1\fs22 \cf3 kosmicFile
\f0\fs28 \cf0  record containing file paths within a dictionary type result object. If found, KosmicTask will return the contents of the file or files to the client.\
\
Javascript cannot directly access the file system to create a file but a task may return a file if it already exists:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f1\fs22 \cf3 \
file = "'~/somefile.txt'";\
	\
// return a YAML inline dictionary\
result = "--- \{kosmicFile: " + file + "\}";\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs28 \cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\b \cf0 Syntax Checking
\b0 \
\
On Intel powered macs enhanced syntax checking is supplied by JavaScriptLint
\f1\fs22 \cf4 \CocoaLigature0  {\field{\*\fldinst{HYPERLINK "http://www.javascriptlint.com/"}}{\fldrslt 
\f0\fs28 \cf5 http://www.javascriptlint.com/}}
\f0\fs28 \cf0 \CocoaLigature1 \
\
On non Intel powered machines the default WebKit implementation is used.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\fs24 \cf0 v1.0 August 2010}