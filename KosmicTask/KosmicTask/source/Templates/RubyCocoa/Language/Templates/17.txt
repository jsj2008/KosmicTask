#
# Created by Mugginsoft on 27 Mar 2012 13:00:02
#
# Credits:
#
# Notes: 
#
# Links:
#
# Apple's take on accessing Cocoa from Python
# http://developer.apple.com/cocoa/pyobjc.html
#
# RubyCocoa documentation
# http://rubycocoa.sourceforge.net/Documentation
#
# Tips and tools
# http://www.rubyinside.com/the-ultimate-list-of-rubycocoa-tutorials-tips-and-tools-728.html
#
require 'osx/cocoa'

# KosmicTask controller
$taskController = OSX.NSClassFromString("KosmicTaskController")

def kosmictask()

	# define paths
	paths = Array.new()
	
	# define result 
	result = Hash.new()
	
   	# define command
	command = "screencapture"

	begin

		for i in (1..5)
			# create path to temp result file from taskController.
			# this file will be automatically deleted when the task ends.
			#
			# an alternative would be:
			# f = Tempfile.new('kosmictask')
	    	# f.close
	    	# path = f.path + ".png"
	    	#
	    	path = $taskController.resultFileWithName_("capture.png");
	    		
	    	# log command
			$stderr.puts "Running #{command} command..."
		
	   		# execute command
			status = system("%s -t png %s" % [command, path])
		 	if !status 
		 		raise "Error running #{command}" 
		 	end
	    
	    	# push path onto end of our array
	    	paths.push(path)
	    	
	    	# log wait
			$stderr.puts "Waiting..."
		
	    	sleep 1.0
	    end
	    
		# create our result hash
		result = Hash.new()
		
		# add keyed array of file paths
		result["kosmicFile"] = paths;
		
		# add keyed result name
		result['kosmicName'] = command
				
		# add keyed info
		result["kosmicInfo"] = "files returned"
		
	rescue => e
	
		# return error
		result['kosmicError'] = e.message
	end

	
	return result
end
		