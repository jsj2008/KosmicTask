#
# Created by {{ author }} on {% now | date_format: "dd MMM yyyy HH:mm:ss" %}
#
# Credits:
#
# Notes: 
#
# Links:
#
# Apple's take on accessing Cocoa from Python
# http://developer.apple.com/cocoa/pyobjc.html
#
# RubyCocoa documentation
# http://rubycocoa.sourceforge.net/Documentation
#
# Tips and tools
# http://www.rubyinside.com/the-ultimate-list-of-rubycocoa-tutorials-tips-and-tools-728.html
#
require 'osx/cocoa'

# KosmicTask controller
$taskController = OSX.NSClassFromString("KosmicTaskController")

def kosmictask()

	# define result 
	result = Hash.new()
		
	begin
	
		# create path to temp result file from taskController.
		# this file will be automatically deleted when the task ends.
		#
		# an alternative would be:
		# f = Tempfile.new('kosmictask')
	    # f.close
	    # path = f.path + "capture.png"
	    #
	    path = $taskController.resultFileWithName_("capture.png");
	    
	    # define command
		command = "screencapture"
	
		# log command
		$stderr.puts "Running #{command} command..."
		
	    # execute command
		status = system("%s -t png %s" % [command, path])
	 	if !status 
	 		raise "Error running #{command}" 
	 	end
	    
		# add keyed file path
		result['kosmicFile'] = path

		# add keyed result name
		result['kosmicName'] = command
			
		# add keyed info
		result['kosmicInfo'] = "file returned"
	
	rescue => e
	
		# return error
		result['kosmicError'] = e.message
	end

	return result
end
		