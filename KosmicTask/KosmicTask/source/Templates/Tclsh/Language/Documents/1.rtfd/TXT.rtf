{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf290
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;\red0\green0\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\b\fs36 \cf2 Mugginsoft\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\b0\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\b\fs28 \cf0 Usage\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\b0 \cf0 Tcl is a scripting language commonly used for rapid prototyping and testing.\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\b \cf0 Calling the Task Run Function
\b0 \
\
Arguments are passed to Tcl powered tasks as direct parameters rather than through a named entry point function. The task parameters are forwarded to the task script as command line arguments.\
\
\

\b Result Objects
\b0 \
\
Tcl tasks return results to the client by printing to stdout.\
\
To return structured data, including the contents of files, Tcl powered tasks should format result data using YAML. KosmicTask supports both the YAML inline and block formats.\
\
Tcl tasks may either print YAML strings directly or make use of the provided 
\f1\fs22 \cf3 KosmicTaskController
\f0\fs28 \cf0  package. This package provides a convenience function that prints native Tcl objects such as lists, dictionaries and huddles as YAML formatted strings.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f1\fs22 \cf3 package require KosmicTaskController\
\
# build list of planets\
set planets [list "Mercury" "Venus" "Earth"]\
lappend planets "Mars"\
lappend planets "Jupiter"\
lappend planets "Saturn"\
lappend planets "Uranus"\
lappend planets "Neptune"\
\
# print native object as YAML\
::KosmicTaskController::printObject $planets
\f0\fs28 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\b \cf0 \
\
Result File Handling\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\b0 \cf0 \
KosmicTask supports the returning of file contents within task results. \
\
KosmicTask automatically looks for a 
\f1\fs22 \cf3 kosmicFile
\f0\fs28 \cf0  record containing file paths within a dictionary type result object. If found, KosmicTask will return the contents of the file or files to the client.\
\
For Tcl powered tasks files are returned as results using the following YAML dictionary syntax:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f1\fs22 \cf3 set file "capture.png"\
puts "--- \{kosmicFile: $file"
\f0\fs28 \cf0 \
\
A common usage scenario is that a task creates a temporary file (or files) whose contents are then returned to the client. KosmicTask therefore supports automatic temporary file creation and deletion. Temporary files created through KosmicTask are automatically deleted once the parent task has completed.\
\
Tcl powered tasks can create temporary files simply by creating files in the current working directory.\
\

\f1\fs22 \cf3 # file created in task current directory will be automatically deleted\
set file "capture.png"\
 \
# capture sceen shot to file\
exec screencapture -t png $file\
    \
# return a YAML inline format dictionary with filename\
set result "\{kosmicFile: $file, kosmicInfo: file returned\}"\
\
puts "---"\
puts $result\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\b\fs28 \cf0 \
Preventing command substitution for YAML inline format arrays
\b0 \
\
TCL automatically performs command substitution within strings whenever it encounters square brackets:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f1\fs22 \cf3 set item "Earth"\
puts "Here we are on [set item]"
\f0\fs28 \cf0 \
\
This substitution causes problems when we attempt to return a YAML inline format array:\
\

\f1\fs22 \cf3 puts "[Earth, Moon]"
\f0\fs28 \cf0 \
\
TCL attempts to execute a command called Earth, and reports
\f1  
\fs22 \cf3 invalid command name "Earth,"
\fs28 \cf0 .\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0 \cf0 \
To successfully return a YAML inline format array string we need to escape the initial square bracket :\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f1\fs22 \cf3 puts "\\[Earth, Moon]"
\fs28 \cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0 \cf0 \

\fs24 v1.0 November 2010}